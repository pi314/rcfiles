''''true
TMPFILE=$(mktemp /tmp/vipe.XXXXXX)
cat > "${TMPFILE}"
${EDITOR} ${TMPFILE} </dev/tty >/dev/tty
cat ${TMPFILE}
rm "${TMPFILE}"
exit
'''


import os
import subprocess as sub
import sys
import tempfile



def main():
    lines = []
    stdin_backup = sys.stdin
    stdout_backup = sys.stdout
    stderr_backup = sys.stderr

    if not sys.stdin.isatty():
        lines += sys.stdin.readlines()
        sys.stdin.close()

    sys.stdin = open('/dev/tty')
    sys.stdout = open('/dev/tty', 'wb')
    sys.stderr = open('/dev/tty', 'wb')

    with tempfile.NamedTemporaryFile(mode='w+', encoding='utf8', suffix='.vipe') as tf:
        for line in lines:
            tf.write(line)

        tf.flush()

        sub.call([os.environ.get('EDITOR', 'vim'), tf.name], stdin=sys.stdin, stdout=sys.stdout, stderr=sys.stderr)

        with open(tf.name, mode='r', encoding='utf8') as f:
            lines = [line for line in f.readlines()]

    sys.stdin = stdin_backup
    sys.stdout = stdout_backup
    sys.stderr = stderr_backup

    for line in lines:
        sys.stdout.write(line)



if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        pass

else:
    raise Exception('import no no')
