#!/usr/bin/env python

from __future__ import print_function

import os
import sys
import re


def usage():
    def print_err(*args, **kwargs):
        print(*args, file=sys.stderr, **kwargs)

    print_err('Usage:')
    print_err('    msed [-i[extension]] regex file ...')
    print_err()
    print_err('Options:')
    print_err('    -i[extension]    edit files in-place, saving backups with the specified extension')
    print_err('    regex            sed regex s///flag')
    print_err('                     if "m" present in flag, perl will be used')
    exit(1)


def main():
    regex_regex = re.compile(r'^s(.)(.*)\1(.*)\1(.*)$')
    ext = None
    regex = None
    files = []
    perl = False

    sys.argv = sys.argv[1:]

    if not len(sys.argv):
        usage()

    while len(sys.argv):
        arg = sys.argv[0]
        if arg in ('-h', '--help'):
            usage()

        elif arg.startswith('-i'):
            ext = arg[2:]

        elif '/' in arg:
            regex = arg
            m = regex_regex.match(arg)
            if m and 'm' in m.group(4):
                perl = True

        elif arg[0] != '-':
            files.append(arg)

        sys.argv.pop(0)

    if not regex:
        usage()

    if perl:
        exec_args = ['perl']
        if ext is not None:
            exec_args += ['-i' + ext]

        exec_args += ['-0', '-p', '-e', regex] + files

    else:
        exec_args = ['sed']
        if ext is not None:
            exec_args += ['-i', ext]

        exec_args += [regex] + files

    os.execvp(exec_args[0], exec_args)


if __name__ == '__main__':
    main()
